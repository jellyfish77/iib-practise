

CREATE COMPUTE MODULE Movies_Esql_Transform_MF_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		--CALL CopyEntireMessage();
		
		-- create new message field
		CREATE LASTCHILD OF OutputRoot DOMAIN 'XMLNSC';
		
		-- create references placeholders (the values will be changed later)
		DECLARE movie REFERENCE TO InputRoot.XMLNSC.Movies.Movie;
		--DECLARE films REFERENCE TO OutputRoot.XMLNSC.Films;
		DECLARE film REFERENCE TO OutputRoot.XMLNSC.Films;
		DECLARE ratings REFERENCE TO OutputRoot.XMLNSC.Films.Film;
				
		-- for all the movies		
		WHILE LASTMOVE(movie)=TRUE DO
		
			-- create the new message
			CREATE LASTCHILD OF OutputRoot.XMLNSC.Films AS film Type XMLNSC.Folder Name 'Film';
			
			SET film.(XMLNSC.Field)Name = movie.Title;
			SET film.(XMLNSC.Field)ImdbId = movie.ImdbId;
			SET film.(XMLNSC.Field)Lang = movie.Format.Language;
						
			DECLARE rating REFERENCE TO movie.Ratings.Rating;
			WHILE LASTMOVE(rating) DO
				-- create new Article
				CREATE LASTCHILD OF film.Ratings AS ratings Type XMLNSC.Folder Name 'Rating';
				SET ratings.(XMLNSC.Field)Score = rating.Value;
				
				MOVE rating NEXTSIBLING NAME 'Rating';
			END WHILE;
			
			-- go to the next movie
			MOVE movie NEXTSIBLING NAME 'Movie';
		
		END WHILE;
		
		RETURN TRUE;		
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;
END MODULE;
