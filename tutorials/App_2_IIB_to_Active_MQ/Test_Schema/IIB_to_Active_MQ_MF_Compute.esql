









BROKER SCHEMA Test_Schema


CREATE COMPUTE MODULE IIB_to_Active_MQ_MF_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		--CALL CopyEntireMessage();
		CALL CopyEntireMessage3();
		--SET OutputRoot = InputRoot;
		--SET OutputLocalEnvironment = InputLocalEnvironment;
		--SET OutputExceptionList = InputExceptionList;

		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
	END;

	CREATE PROCEDURE CopyEntireMessage2() BEGIN
		DECLARE i INTEGER 1;
		DECLARE count INTEGER;
		SET count = CARDINALITY(InputRoot.XML.CATALOG.CD[]);

		WHILE i <= count DO
			--use the default tooling-generated procedure for copying message headers
			CALL CopyMessageHeaders();
			SET OutputRoot.XML.CATALOG.CD[i] = InputRoot.XML.CATALOG.CD[i];			
			PROPAGATE;
			SET i = i+1;
		END WHILE;
		--RETURN FALSE;
	END;

	CREATE PROCEDURE CopyEntireMessage3() BEGIN		
		DECLARE sp1 NAMESPACE 'https://github.com/jellyfish77/iib-practise/tutorials';
		DECLARE CurrentYear INTEGER 1990;
		
		SET OutputRoot.XML.Catalog.Album[] =			
			(SELECT	C.TITLE AS Title, 
					C.ARTIST AS Artist, 
					C.PRICE AS Price, 
					C.YEAR as "Year", 
					C.COMPANY AS Label.Name,
					'String' AS Label.Name.(XML.Attribute)Type, 
					C.COUNTRY AS Label.Country 
					FROM InputRoot.XML.CATALOG.CD[] AS C
					WHERE C.YEAR <=1990			
			);
	END;
END MODULE;